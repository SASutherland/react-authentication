{"ast":null,"code":"var _jsxFileName = \"/home/shawn/code/SASutherland/react-authentication/START-HERE/react-auth/client/src/context/UserContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext(null);\nexport const UserProvider = props => {\n  _s();\n  const [authUser, setAuthUser] = useState(null);\n  const signIn = async credentials => {\n    const encodedCredentials = btoa(`${credentials.username}:${credentials.password}`);\n    const fetchOptions = {\n      method: \"GET\",\n      headers: {\n        Authorization: `Basic ${encodedCredentials}`\n      }\n    };\n    const response = await fetch(\"http://localhost:5000/api/users\", fetchOptions);\n    if (response.status === 200) {\n      const user = await response.json();\n      setA;\n    } else if (response.status === 401) {} else {\n      throw new Error();\n    }\n  };\n  const signOut = () => {};\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {},\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"TVTL2WymH8LPiPX8vka/W2C28u0=\");\n_c = UserProvider;\nexport default UserContext;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","UserContext","UserProvider","props","_s","authUser","setAuthUser","signIn","credentials","encodedCredentials","btoa","username","password","fetchOptions","method","headers","Authorization","response","fetch","status","user","json","setA","Error","signOut","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/shawn/code/SASutherland/react-authentication/START-HERE/react-auth/client/src/context/UserContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\n\nconst UserContext = createContext(null);\n\nexport const UserProvider = (props) => {\n  const [authUser, setAuthUser] = useState(null);\n\n  const signIn = async (credentials) => {\n    const encodedCredentials = btoa(`${credentials.username}:${credentials.password}`);\n\n    const fetchOptions = {\n      method: \"GET\",\n      headers: {\n        Authorization: `Basic ${encodedCredentials}`\n      }\n    };\n\n    const response = await fetch(\"http://localhost:5000/api/users\", fetchOptions);\n    if (response.status === 200) {\n      const user = await response.json();\n      setA\n    } else if (response.status === 401) {\n    } else {\n      throw new Error();\n    }\n  }\n\n  const signOut = () => {\n\n  }\n\n  return (\n    <UserContext.Provider value={{}}>\n      {props.children}\n    </UserContext.Provider>\n  );\n}\n\nexport default UserContext;\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMK,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMS,MAAM,GAAG,MAAOC,WAAW,IAAK;IACpC,MAAMC,kBAAkB,GAAGC,IAAI,CAAE,GAAEF,WAAW,CAACG,QAAS,IAAGH,WAAW,CAACI,QAAS,EAAC,CAAC;IAElF,MAAMC,YAAY,GAAG;MACnBC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,aAAa,EAAG,SAAQP,kBAAmB;MAC7C;IACF,CAAC;IAED,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAEL,YAAY,CAAC;IAC7E,IAAII,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MAC3B,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClCC,IAAI;IACN,CAAC,MAAM,IAAIL,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE,CACpC,CAAC,MAAM;MACL,MAAM,IAAII,KAAK,CAAC,CAAC;IACnB;EACF,CAAC;EAED,MAAMC,OAAO,GAAGA,CAAA,KAAM,CAEtB,CAAC;EAED,oBACExB,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE,CAAC,CAAE;IAAAC,QAAA,EAC7BxB,KAAK,CAACwB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAAA3B,EAAA,CAhCYF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAkCzB,eAAeD,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}